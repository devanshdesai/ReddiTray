'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _events = require('events');

var _events2 = _interopRequireDefault(_events);

var _when = require('when');

var _when2 = _interopRequireDefault(_when);

var _utils = require('./utils');

var u = _interopRequireWildcard(_utils);

var _Endpoint = require('./Endpoint');

var _Endpoint2 = _interopRequireDefault(_Endpoint);

var _ResponseError = require('./ResponseError');

var _ResponseError2 = _interopRequireDefault(_ResponseError);

var Modhash = (function (_events$EventEmitter) {
  _inherits(Modhash, _events$EventEmitter);

  function Modhash(userConfig, request) {
    _classCallCheck(this, Modhash);

    _get(Object.getPrototypeOf(Modhash.prototype), 'constructor', this).call(this);

    this._userConfig = userConfig;

    this._request = request;

    this.modhash = '';
    this.modhashRefreshed = 0;
  }

  _createClass(Modhash, [{
    key: 'isModhashOld',
    value: function isModhashOld() {
      // 10 minutes by default
      var timeout = 10 * 60 * 1000;

      return Date.now() - this.modhashRefreshed > timeout;
    }
  }, {
    key: 'setModhash',
    value: function setModhash(modhash) {
      this.modhash = modhash;
      this.modhashRefreshed = Date.now();
    }
  }, {
    key: 'hasModhash',
    value: function hasModhash() {
      return !!this.modhash.length;
    }

    /*
       Get the current cached modhash.
     */
  }, {
    key: 'getCurrentModhash',
    value: function getCurrentModhash() {
      if (!this.hasModhash()) {
        return undefined;
      }
      return this.modhash;
    }
  }, {
    key: 'refreshModhash',
    value: function refreshModhash() {
      var _this = this;

      var endpoint = new _Endpoint2['default'](this._userConfig, this._userConfig.serverWWW, 'get', '/api/me.json', {}, {}, {}, this._userConfig.serverWWWPort);

      var responseErrorHandler = function responseErrorHandler(response, endpoint) {
        if (String(response._status).indexOf('4') === 0) {
          return _when2['default'].reject(new _ResponseError2['default']('Invalid refreshModhash request', response, endpoint));
        }
        // else return the endpoint to try again
        return _when2['default'].resolve(endpoint);
      };

      return this._request.https(endpoint, responseErrorHandler).then(function (res) {
        var response = JSON.parse(res._body);

        if (!response.data) {
          throw new _ResponseError2['default']('Invalid refreshModhash response. Are you logged in?', response, endpoint);
        } else {
          _this.setModhash(response.data.modhash);

          return {
            modhash: response.data.modhash
          };
        }
      });
    }
  }, {
    key: 'getModhash',
    value: function getModhash() {
      if (!this.isModhashOld()) {
        return _when2['default'].resolve({
          modhash: this.modhash
        });
      } else {
        return this.refreshModhash();
      }
    }
  }]);

  return Modhash;
})(_events2['default'].EventEmitter);

exports['default'] = Modhash;
module.exports = exports['default'];
//# sourceMappingURL=Modhash.js.map
