// Node.js libraries
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _events = require('events');

var _events2 = _interopRequireDefault(_events);

var _util = require('util');

var _util2 = _interopRequireDefault(_util);

// Our modules

var _Request = require('./Request');

var _Request2 = _interopRequireDefault(_Request);

var _RedditRequest = require('./RedditRequest');

var _RedditRequest2 = _interopRequireDefault(_RedditRequest);

var _Throttle = require('./Throttle');

var _Throttle2 = _interopRequireDefault(_Throttle);

var _UserConfig = require('./UserConfig');

var _UserConfig2 = _interopRequireDefault(_UserConfig);

var _OAuth = require('./OAuth');

var _OAuth2 = _interopRequireDefault(_OAuth);

var _Modhash = require('./Modhash');

var _Modhash2 = _interopRequireDefault(_Modhash);

var _httpsFile = require('./https/file');

var _httpsFile2 = _interopRequireDefault(_httpsFile);

var Snoocore = (function (_events$EventEmitter) {
  _inherits(Snoocore, _events$EventEmitter);

  _createClass(Snoocore, null, [{
    key: 'file',
    value: function file() {
      return _httpsFile2['default'].apply(undefined, arguments);
    }
  }, {
    key: 'version',
    get: function get() {
      return '3.2.0';
    }
  }]);

  function Snoocore(userConfiguration) {
    var _this = this;

    _classCallCheck(this, Snoocore);

    _get(Object.getPrototypeOf(Snoocore.prototype), 'constructor', this).call(this);

    // @TODO - this is a "god object" of sorts.
    this._userConfig = new _UserConfig2['default'](userConfiguration);

    this._throttle = new _Throttle2['default'](this._userConfig.throttle);

    this._request = new _Request2['default'](this._throttle);

    this._request.on('response_error', function (responseError) {
      _this.emit('response_error', responseError);
    });

    // Two OAuth instances. One for authenticated users, and another for
    // Application only OAuth. Two are needed in the instance where
    // a user wants to bypass authentication for a call - we don't want
    // to waste time by creating a new app only instance, authenticating,
    // etc.
    this.oauth = new _OAuth2['default'](this._userConfig, this._request);
    this.oauthAppOnly = new _OAuth2['default'](this._userConfig, this._request);

    // Expose OAuth functions in here
    ['getExplicitAuthUrl', 'getImplicitAuthUrl', 'getAuthUrl', 'auth', 'refresh', 'deauth', 'getRefreshToken', 'getAccessToken', 'setRefreshToken', 'setAccessToken', 'hasRefreshToken', 'hasAccessToken'].forEach(function (fn) {
      _this[fn] = _this.oauth[fn].bind(_this.oauth);
    });

    if (this._userConfig.useBrowserCookies) {
      this.modhash = new _Modhash2['default'](this._userConfig, this._request);

      // Expose Modhash functions in here
      ['isModhashOld', 'setModhash', 'getModhash', 'getCurrentModhash', 'refreshModhash'].forEach(function (fn) {
        _this[fn] = _this.modhash[fn].bind(_this.modhash);
      });
    }

    this.appOnlyAuth = this.oauthAppOnly.applicationOnlyAuth.bind(this.oauthAppOnly);

    // Bubble up the  events
    this.oauth.on('access_token_refreshed', function (accessToken) {
      _this.emit('access_token_refreshed', accessToken);
    });

    this._redditRequest = new _RedditRequest2['default'](this._userConfig, this._request, this.oauth, this.oauthAppOnly, this.modhash);

    this._redditRequest.on('access_token_expired', function (responseError) {
      _this.emit('access_token_expired', responseError);
    });

    this._redditRequest.on('rate_limit', function (rateLimitData) {
      _this.emit('rate_limit', rateLimitData);
    });

    this._redditRequest.on('rate_limit_reached', function (rateLimitData) {
      // let the user know that they have gone over
      _this.emit('rate_limit_reached', rateLimitData);
      // Delay the next call until the rate limit reset occurs
      _this._throttle.addTime(rateLimitData.rateLimitReset * 1000);
    });

    /*
       Make this._redditRequest.path the primary function that we return, but
       stick the rest of the available functions on the prototype so we
       can use them as well.
     */
    var path = this._redditRequest.path.bind(this._redditRequest);

    var key = undefined;
    for (key in this) {
      path[key] = this[key];
    }

    return path;
  }

  return Snoocore;
})(_events2['default'].EventEmitter);

exports['default'] = Snoocore;
module.exports = exports['default'];
//# sourceMappingURL=Snoocore.js.map
